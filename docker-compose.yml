version: '3.8'

services:
  # Servicio de la base de datos MySQL
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: tiempos_en_vivo
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app-network

  # Servicio de Laravel (backend)
  laravel:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel
    restart: always
    volumes:
      - backend_app:/var/www/apitev/
    expose:
      - "9000"  # Exponemos PHP-FPM en el puerto 9000
    # ports:
    #   - "9000:9000"
    depends_on:
      - mysql
    networks:
      - app-network

  # Servicio de Next.js (frontend)
  nextjs:
    build:
      context: ./client-web
      dockerfile: Dockerfile
    container_name: nextjs
    restart: always
    # volumes:
    #   - frontend_app:/app/.next

    ports:
      - "3000:3000"  # Exponemos Next.js en el puerto 3000
    depends_on:
      - laravel
    environment:
      - NEXT_PUBLIC_SERVER_URI=http://api.rallycronos.com/
    networks:
      - app-network
    command: sh -c "node server.js"
    

  # Servicio de Nginx
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - frontend_app:/var/www/next_app
      - backend_app:/var/www/apitev
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    restart: always
    ports:
      - "80:80"     # Expone el puerto 80 para el tráfico HTTP
      - "443:443"   # Expone el puerto 443 para el tráfico HTTPS
    depends_on:
      - laravel
      - nextjs
    networks:
      - app-network

# Definir volúmenes persistentes
volumes:
  mysql_data:
    driver: local
  frontend_app:
    driver: local
  backend_app:
    driver: local


# Definir red de la aplicación
networks:
  app-network:
    external: true
